// Rulebook
//
// Rule formats:
//         selector:command(arguments)[>command(arguments)...]
//     where
//         selector is the name of the tag to trigger the command
//         command is one of the following
//             Ignore            - Ignores the content of the tag and any descendant content as well.
//             Strip             - Removes any trailing whitespace line by line.
//             Wrap              - Wraps the content of the tag by the given prefix and suffix. Optional third argument
//                                 sets whether an empty content is allowed (default is false, empty content is skipped).
//                                 The prefix or suffix can be a config property also (See Config below).
//             WrapIn            - Same as Wrap, but a list of tags can be specified in the fourth argument, separated
//                                 by ';'. If the tag has a parent tag listed then the Wrap is performed, otherwise the
//                                 content without the given prefix and suffix is returned.
//             WrapOut           - Same as WrapIn, but the given tag list is a blacklist, so if the tag is not listed
//                                 then the Wrap is performed.
//             WrapWithAttribute - Wraps the content of the tag as Wrap would do, but an attribute of the tag can be
//                                 specified in the third argument, that attribute will be Wrapped also and appended to
//                                 the Wrapped tag content.
//             Config            - Modifies a configuration, these also can be used in Wrap. Currently supported:
//                                 _bullet: bullet of list items. default is ' * '.
//     composition:
//         Composit rules can  be made by the '>' separator. In this case the commands are performed from right to lef.
//
// General HTML tags:
html:Strip()
head:Ignore()
h1:Wrap(\n#\s,\n)
h2:Wrap(\n##\s,\n)
h3:Wrap(\n###\s,\n)
h4:Wrap(\n####\s,\n)
h5:Wrap(\n#####\s,\n)
h6:Wrap(\n######\s,\n)
hr:Wrap(\n---,\n,True)
br:Wrap(\n\n,,True)
p:WrapOut(\n,\n,False,table)
div:WrapOut(,,False,table;ol;ul)
i:Wrap(*,*)
b:Wrap(**,**)
strong:Wrap(**,**)
span:Wrap(,)
strike:Wrap(~~,~~)
code:WrapOut(\s`,`\s,False,div)
pre:Wrap(\n```\n,\n```\n)
img:WrapOut(\n,\n\n,False,a;table;li)>WrapWithAttribute(![,],src,(,\s""))
a:WrapWithAttribute([,],href,(,))
ul:Config(_bullet,\s*\s)
ol:Config(_bullet,\s1.\s)
li:Wrap(\n${_bullet},)>Indent(\s\s\s\s,False)
table:Table(\n\n,\n)
tr:RowFeed()
td:CellFeed()
th:CellFeed()
// JavaScript related
noscript:Ignore()
script:Ignore()
// Framework specific XHTML tags
footer:Ignore()
tt:Wrap(`,`)
// Custom - Confluence to Markdown-extra
// header:Ignore()
#ht-breadcrumb:Ignore()
#ht-headerbar:Ignore()
aside:Ignore()
nav:Ignore()
.line:Wrap(\n,)
.syntaxhighlighter:Wrap(\n\n```\n,\n```\n\n)
.toc-indentation:Ignore()
.admonition-warning:Wrap(\n&gt;\s{warning}\s,\n\n)
.admonition-info:Wrap(\n&gt;\s{info}\s,\n\n)
.admonition-note:Wrap(\n&gt;\s{primary}\s,\n\n)